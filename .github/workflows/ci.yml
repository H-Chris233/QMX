name: 'publish'

on:
  pull_request:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # 桌面平台
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
          # Android 平台 (仅保留 arm64 和 armv7)
          - platform: 'ubuntu-22.04'
            args: '--target aarch64-linux-android'
            android: true
          - platform: 'ubuntu-22.04'
            args: '--target armv7-linux-androideabi'
            android: true
          # iOS 平台 (仅保留 arm64)
          - platform: 'macos-latest'
            args: '--target aarch64-apple-ios'
            ios: true

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # 安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # 设置 Node.js 和缓存
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 安装 Android 工具链 (仅限 Android 构建)
      - name: Install Android SDK and NDK
        if: matrix.android == true
        uses: android-actions/setup-android@v2

      - name: Setup Android NDK
        if: matrix.android == true
        run: |
          # 设置 Android NDK 环境变量
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV

      - name: Install Android targets
        if: matrix.android == true
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi
          # 安装 cargo-ndk 用于 Android 构建
          cargo install cargo-ndk

      # 安装 iOS 工具链 (仅限 iOS 构建)
      - name: Install iOS target
        if: matrix.ios == true
        run: |
          rustup target add aarch64-apple-ios
          rustup target add x86_64-apple-ios  # 添加模拟器支持
          sudo gem install cocoapods
          # 安装 cargo-xcode 用于 iOS 构建
          cargo install cargo-xcode

      # Ubuntu 特定依赖
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          # 如果是 Android 构建，还需要安装一些额外依赖
          if [ "${{ matrix.android }}" = "true" ]; then
            sudo apt-get install -y openjdk-17-jdk android-sdk-platform-tools-common
          fi

      # 安装前端依赖
      - name: Install frontend dependencies
        run: pnpm install

      # 环境检查和配置
      - name: Check environment
        run: |
          echo "Rust version: $(rustc --version)"
          echo "Node version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"
          if [ "${{ matrix.android }}" = "true" ]; then
            echo "ANDROID_HOME: $ANDROID_HOME"
            echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
            ls -la $ANDROID_HOME
          fi

      # 构建 Tauri 应用
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Android 特定环境变量
          ANDROID_HOME: ${{ matrix.android == 'true' && env.ANDROID_HOME || '' }}
          ANDROID_NDK_HOME: ${{ matrix.android == 'true' && env.ANDROID_NDK_HOME || '' }}
          NDK_HOME: ${{ matrix.android == 'true' && env.NDK_HOME || '' }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}